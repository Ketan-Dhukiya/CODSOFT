#include <iostream>
using namespace std;

const int SIZE = 3;
char board[SIZE][SIZE];

void initializeBoard() {
    int counter = 1;
    for (int i = 0; i < SIZE; i++) {
        for (int j = 0; j < SIZE; j++) {
            board[i][j] = '0' + counter;
            counter++;
        }
    }
}

void displayBoard() {
    for (int i = 0; i < SIZE; i++) {
        for (int j = 0; j < SIZE; j++) {
            cout << board[i][j] << " ";
        }
        cout << endl;
    }
}

bool checkWin(char player) {
    // Check rows and columns
    for (int i = 0; i < SIZE; i++) {
        if ((board[i][0] == player && board[i][1] == player && board[i][2] == player) ||
            (board[0][i] == player && board[1][i] == player && board[2][i] == player)) {
            return true;
        }
    }
    // Check diagonals
    if ((board[0][0] == player && board[1][1] == player && board[2][2] == player) ||
        (board[0][2] == player && board[1][1] == player && board[2][0] == player)) {
        return true;
    }
    return false;
}

bool checkDraw() {
    for (int i = 0; i < SIZE; i++) {
        for (int j = 0; j < SIZE; j++) {
            if (board[i][j] != 'X' && board[i][j] != 'O') {
                return false;
            }
        }
    }
    return true;
}

void switchPlayer(char &currentPlayer) {
    currentPlayer = (currentPlayer == 'X') ? 'O' : 'X';
}

bool isValidMove(int move) {
    int row = (move - 1) / SIZE;
    int col = (move - 1) % SIZE;
    return board[row][col] != 'X' && board[row][col] != 'O';
}

void updateBoard(int move, char currentPlayer) {
    int row = (move - 1) / SIZE;
    int col = (move - 1) % SIZE;
    board[row][col] = currentPlayer;
}

int main() {
    char playAgain;
    do {
        initializeBoard();
        char currentPlayer = 'X';
        bool gameWon = false;

        while (true) {
            displayBoard();
            int move;
            cout << "Player " << currentPlayer << ", enter your move (1-9): ";
            cin >> move;

            while (!isValidMove(move)) {
                cout << "Invalid move! Try again: ";
                cin >> move;
            }

            updateBoard(move, currentPlayer);

            if (checkWin(currentPlayer)) {
                displayBoard();
                cout << "Player " << currentPlayer << " wins!" << endl;
                gameWon = true;
                break;
            }

            if (checkDraw()) {
                displayBoard();
                cout << "The game is a draw!" << endl;
                break;
            }

            switchPlayer(currentPlayer);
        }

        cout << "Do you want to play again? (y/n): ";
        cin >> playAgain;

    } while (playAgain == 'y' || playAgain == 'Y');

    return 0;
}
